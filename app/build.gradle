/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.5/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

java.sourceCompatibility = JavaVersion.VERSION_21

dependencies {
    // Use JUnit Jupiter for testing.
        implementation group: 'com.github.freva', name: 'ascii-table', version: '1.8.0'
        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.10.2'
        implementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.10.2'
        testImplementation 'org.assertj:assertj-core:3.21.0'
        testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.0'
        testImplementation libs.junit.jupiter

        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
        implementation libs.guava
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'romansnumbers.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

jar {
    manifest {
        attributes 'Main-Class': 'romansnumbers.App'
    }
}